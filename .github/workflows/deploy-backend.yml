name: deploy-backend
on:
  push:
    branches: [main]
    paths:
      - "apps/backend/**"
      - "docker/backend.Dockerfile"
      - "packages/**"

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for OIDC
      contents: read
    env:
      REGION: australia-southeast1
      REPO: urbix
      SERVICE: urbix-backend
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install deps & test
        run: |
          pnpm install --frozen-lockfile
          pnpm -C apps/backend build

      - name: Auth to GCP (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github
          service_account: gh-deployer@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com
          # Optional: further restrict by branch
          # token_format: "access_token"
          # include_email: true

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Configure Docker auth
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build & push image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ env.REPO }}/backend:${GITHUB_SHA::7}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -f docker/backend.Dockerfile -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image="$IMAGE" \
            --region=${{ env.REGION }} \
            --memory=512Mi \
            --port=8080 \
            --add-cloudsql-instances=${{ vars.SQL_CONNECTION_NAME }} \
            --vpc-connector=${{ vars.CONNECTOR }} \
            --set-secrets=DATABASE_URL=DATABASE_URL:latest,REDIS_URL=REDIS_URL:latest,APP_ENV=APP_ENV:latest \
            --allow-unauthenticated
